---
import type { CollectionEntry } from 'astro:content';
import BaseLayout from './BaseLayout.astro';
import { formatDate } from '@/utils/formatDate';
import { getReadingTime } from '@/utils/getReadingTime';

interface Props {
  post: CollectionEntry<'blog'>;
}

const { post } = Astro.props;
const { Content } = await post.render();
const readingTime = getReadingTime(post.body);
---

<BaseLayout
  title={post.data.title}
  description={post.data.description}
  image={post.data.image}
  article={true}
  publishDate={post.data.date}
  author={post.data.author}
>
  <article class="py-12">
    <div class="container mx-auto px-4 max-w-4xl">
      <!-- Header -->
      <header class="mb-8">
        <!-- Tags -->
        {post.data.tags.length > 0 && (
          <div class="flex flex-wrap gap-2 mb-4">
            {post.data.tags.map((tag) => (
              <a
                href={`/blog?tag=${encodeURIComponent(tag)}`}
                class="inline-block px-3 py-1 text-sm font-medium text-blue-600 bg-blue-50 rounded-full hover:bg-blue-100 transition-colors"
              >
                {tag}
              </a>
            ))}
          </div>
        )}

        <!-- Title -->
        <h1 class="text-4xl md:text-5xl font-bold text-gray-900 mb-4">
          {post.data.title}
        </h1>

        <!-- Meta -->
        <div class="flex flex-wrap items-center gap-4 text-gray-600 text-sm">
          <div class="flex items-center gap-2">
            <svg class="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z" />
            </svg>
            <span>{post.data.author}</span>
          </div>
          <div class="flex items-center gap-2">
            <svg class="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z" />
            </svg>
            <time datetime={post.data.date.toISOString()}>
              {formatDate(post.data.date)}
            </time>
          </div>
          <div class="flex items-center gap-2">
            <svg class="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z" />
            </svg>
            <span>{readingTime}</span>
          </div>
        </div>
      </header>

      <!-- Featured Image -->
      {post.data.image && (
        <div class="mb-8 rounded-lg overflow-hidden">
          <img
            src={post.data.image}
            alt={post.data.title}
            class="w-full h-auto object-cover"
          />
        </div>
      )}

      <!-- Content -->
      <div class="prose prose-lg prose-gray max-w-none prose-headings:font-bold prose-a:text-blue-600 hover:prose-a:text-blue-700 prose-code:text-pink-600 prose-code:bg-gray-100 prose-code:px-1 prose-code:py-0.5 prose-code:rounded prose-code:before:content-[''] prose-code:after:content-[''] prose-pre:bg-gray-900 prose-pre:text-gray-100">
        <Content />
      </div>

      <!-- Back to Blog -->
      <div class="mt-12 pt-8 border-t">
        <a
          href="/blog"
          class="inline-flex items-center gap-2 text-blue-600 hover:text-blue-700 font-medium transition-colors"
        >
          <svg class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 19l-7-7m0 0l7-7m-7 7h18" />
          </svg>
          Back to Blog
        </a>
      </div>
    </div>
  </article>
</BaseLayout>
